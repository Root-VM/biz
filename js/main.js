"use strict";$(document).ready(function(){function e(e){e.on("wheel",function(e){e.preventDefault(),e.originalEvent.deltaY<0?$(this).slick("slickNext"):$(this).slick("slickPrev")})}function t(e,t){$(e).on("init reInit afterChange",function(e,o,i,n){var s=(i?i:0)+1;$(t).text(s+"/"+o.slideCount)})}function o(e){var t=document.getElementsByClassName("grid")[0],o=parseInt(window.getComputedStyle(t).getPropertyValue("grid-auto-rows")),i=parseInt(window.getComputedStyle(t).getPropertyValue("grid-row-gap")),n=Math.ceil((e.querySelector(".content").getBoundingClientRect().height+i)/(o+i));e.style.gridRowEnd="span "+n}function i(){for(var e=$(".catalog .item"),t=0;t<e.length&&!window.CP.shouldStopExecution(0);t++)o(e[t]);window.CP.exitedLoop(0)}const n=$(".slider-my"),s=$(".notice .slider-notice, .enterprise .slider-ent");t(".slider-my",".slider-count-mobile"),t(".enterprise .slider-ent",".slider-count-mobile-ent"),t(".n-group .slider-notice",".slider-count-mobile-notice"),n.slick({dots:!1,infinite:!0,slidesToShow:5,slidesToScroll:1,variableWidth:!0,responsive:[{breakpoint:620,settings:{variableWidth:!1,slidesToShow:1}}]}),s.slick({dots:!1,infinite:!0,slidesToShow:2,slidesToScroll:1,variableWidth:!0,responsive:[{breakpoint:620,settings:{variableWidth:!1,slidesToShow:1}}]}),e(n),e(s),$(".nav-block img").click(function(){$(".menu-wrapper").addClass("menu-active")}),$("nav img, nav .texts, nav .btn, .grey-bg").click(function(){$(".menu-wrapper").removeClass("menu-active")}),$(".slider-my .detals").click(function(e){e.preventDefault(),$(".slider-my .info").not($(this).closest(".selected")).removeClass("selected"),$(this).closest(".info").toggleClass("selected")}),$(".slider-ent .detals").click(function(e){e.preventDefault(),$(".slider-ent .texts .detals-text").removeClass("selected"),$(this).closest(".texts ").toggleClass("selected")}),$(".enterprise-page .filter-company .detals").click(function(e){e.preventDefault(),$(".enterprise-page .filter-company .detals-text").removeClass("selected"),$(this).closest(".texts ").toggleClass("selected")}),$(".footer-wrapper .block").click(function(e){e.preventDefault(),$(this).toggleClass("footer-active")});var r=0;$(window).scroll(function(e){var t=$(this).scrollTop();t>r?$("header .header-move").addClass("header-scroll"):$("header .header-move").removeClass("header-scroll"),r=t}),$(".personal-page .controls .btn-s").on("click",function(){$(".personal-page .controls .btn-s").removeClass("active"),$(this).addClass("active"),$(this).hasClass("for-about-us")?($(".personal-page .about-us").css("display","flex"),$(".personal-page .tab-comments").css("display","none")):$(this).hasClass("for-tab-comments")?($(".personal-page .tab-comments").css("display","flex"),$(".personal-page .about-us").css("display","none")):($(".personal-page .about-us").css("display","none"),$(".personal-page .tab-comments").css("display","none"))}),$(".company-page .catalog .item .title").on("click",function(){window.matchMedia("(max-width: 620px)").matches&&(0===$(this).parent().height()?($(this).parent().height($(this).parent().find(".items").height()+45),$(this).parent().addClass("active-item")):($(this).parent().height(0),$(this).parent().removeClass("active-item")),$(".company-page .catalog .item .block").not($(this).parent()).height(0),$(this).parent().css("zIndex",6),$(".company-page .catalog .item .block").not($(this).parent()).removeClass("active-item"),$(".company-page .catalog .item .block").not($(this).parent()).css("zIndex",5))}),$(".company-page .catalog .item .else").on("click",function(){195===$(this).parent().height()?($(this).parent().height($(this).parent().find(".items").height()+45),$(this).parent().addClass("active-item")):($(this).parent().height(195),$(this).parent().removeClass("active-item")),$(".company-page .catalog .item .block").not($(this).parent()).height(195),$(this).parent().css("zIndex",6),$(".company-page .catalog .item .block").not($(this).parent()).removeClass("active-item"),$(".company-page .catalog .item .block").not($(this).parent()).css("zIndex",5)}),$(".company-page .list .loading").on("click",function(){$(this).parent().addClass("active-list")}),setTimeout(function(){$(".enterprise-page .grid .item .content").css("height","100%")}),"object"!=typeof window.CP&&(window.CP={}),window.CP.PenTimer={programNoLongerBeingMonitored:!1,timeOfFirstCallToShouldStopLoop:0,_loopExits:{},_loopTimers:{},START_MONITORING_AFTER:2e3,STOP_ALL_MONITORING_TIMEOUT:5e3,MAX_TIME_IN_LOOP_WO_EXIT:2200,exitedLoop:function(e){this._loopExits[e]=!0},shouldStopLoop:function(e){if(this.programKilledSoStopMonitoring)return!0;if(this.programNoLongerBeingMonitored)return!1;if(this._loopExits[e])return!1;var t=this._getTime();if(0===this.timeOfFirstCallToShouldStopLoop)return this.timeOfFirstCallToShouldStopLoop=t,!1;var o=t-this.timeOfFirstCallToShouldStopLoop;if(o<this.START_MONITORING_AFTER)return!1;if(o>this.STOP_ALL_MONITORING_TIMEOUT)return this.programNoLongerBeingMonitored=!0,!1;try{this._checkOnInfiniteLoop(e,t)}catch(i){return this._sendErrorMessageToEditor(),this.programKilledSoStopMonitoring=!0,!0}return!1},_sendErrorMessageToEditor:function(){try{if(this._shouldPostMessage()){var e={action:"infinite-loop",line:this._findAroundLineNumber()};parent.postMessage(e,"*")}else this._throwAnErrorToStopPen()}catch(t){this._throwAnErrorToStopPen()}},_shouldPostMessage:function(){return document.location.href.match(/boomerang/)},_throwAnErrorToStopPen:function(){throw"We found an infinite loop in your Pen. We've stopped the Pen from running. Please correct it or contact support@codepen.io."},_findAroundLineNumber:function(){var e=new Error,t=0;if(e.stack){var o=e.stack.match(/boomerang\S+:(\d+):\d+/);o&&(t=o[1])}return t},_checkOnInfiniteLoop:function(e,t){if(!this._loopTimers[e])return this._loopTimers[e]=t,!1;if(t-this._loopTimers[e]>this.MAX_TIME_IN_LOOP_WO_EXIT)throw"Infinite Loop found on loop: "+e},_getTime:function(){return+new Date}},window.CP.shouldStopExecution=function(e){var t=window.CP.PenTimer.shouldStopLoop(e);return!0===t&&console.warn("Sorry!"),t},window.CP.exitedLoop=function(e){window.CP.PenTimer.exitedLoop(e)},window.onload=i(),window.addEventListener("resize",i);for(var a=document.getElementsByClassName("item"),l=0;l<a.length&&!window.CP.shouldStopExecution(1);l++);window.CP.exitedLoop(1)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicmVhZHkiLCJtb3VzZVdoZWVsIiwiZWxlbWVudCIsIm9uIiwiZSIsInByZXZlbnREZWZhdWx0Iiwib3JpZ2luYWxFdmVudCIsImRlbHRhWSIsInRoaXMiLCJzbGljayIsImNvdW50IiwiZWwiLCJjX2VsIiwiZXZlbnQiLCJjdXJyZW50U2xpZGUiLCJuZXh0U2xpZGUiLCJpIiwidGV4dCIsInNsaWRlQ291bnQiLCJyZXNpemVHcmlkSXRlbSIsIml0ZW0iLCJncmlkIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsInJvd0hlaWdodCIsInBhcnNlSW50Iiwid2luZG93IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImdldFByb3BlcnR5VmFsdWUiLCJyb3dHYXAiLCJyb3dTcGFuIiwiTWF0aCIsImNlaWwiLCJxdWVyeVNlbGVjdG9yIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwiaGVpZ2h0Iiwic3R5bGUiLCJncmlkUm93RW5kIiwicmVzaXplQWxsR3JpZEl0ZW1zIiwiYWxsSXRlbXMiLCJ4IiwibGVuZ3RoIiwiQ1AiLCJzaG91bGRTdG9wRXhlY3V0aW9uIiwiZXhpdGVkTG9vcCIsInNsaWRlciIsInNsaWRlcl9ub3RpY2UiLCJkb3RzIiwiaW5maW5pdGUiLCJzbGlkZXNUb1Nob3ciLCJzbGlkZXNUb1Njcm9sbCIsInZhcmlhYmxlV2lkdGgiLCJyZXNwb25zaXZlIiwiYnJlYWtwb2ludCIsInNldHRpbmdzIiwiY2xpY2siLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwibm90IiwiY2xvc2VzdCIsInRvZ2dsZUNsYXNzIiwibGFzdFNjcm9sbFRvcCIsInNjcm9sbCIsInN0Iiwic2Nyb2xsVG9wIiwiaGFzQ2xhc3MiLCJjc3MiLCJtYXRjaE1lZGlhIiwibWF0Y2hlcyIsInBhcmVudCIsImZpbmQiLCJzZXRUaW1lb3V0IiwiUGVuVGltZXIiLCJwcm9ncmFtTm9Mb25nZXJCZWluZ01vbml0b3JlZCIsInRpbWVPZkZpcnN0Q2FsbFRvU2hvdWxkU3RvcExvb3AiLCJfbG9vcEV4aXRzIiwiX2xvb3BUaW1lcnMiLCJTVEFSVF9NT05JVE9SSU5HX0FGVEVSIiwiU1RPUF9BTExfTU9OSVRPUklOR19USU1FT1VUIiwiTUFYX1RJTUVfSU5fTE9PUF9XT19FWElUIiwibyIsInNob3VsZFN0b3BMb29wIiwicHJvZ3JhbUtpbGxlZFNvU3RvcE1vbml0b3JpbmciLCJ0IiwiX2dldFRpbWUiLCJfY2hlY2tPbkluZmluaXRlTG9vcCIsIl9zZW5kRXJyb3JNZXNzYWdlVG9FZGl0b3IiLCJfc2hvdWxkUG9zdE1lc3NhZ2UiLCJhY3Rpb24iLCJsaW5lIiwiX2ZpbmRBcm91bmRMaW5lTnVtYmVyIiwicG9zdE1lc3NhZ2UiLCJfdGhyb3dBbkVycm9yVG9TdG9wUGVuIiwibG9jYXRpb24iLCJocmVmIiwibWF0Y2giLCJFcnJvciIsInN0YWNrIiwiRGF0ZSIsImNvbnNvbGUiLCJ3YXJuIiwib25sb2FkIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6IkFBQUEsWUFDQUEsR0FBRUMsVUFBVUMsTUFBTSxXQUtkLFFBQVNDLEdBQVdDLEdBQ2hCQSxFQUFRQyxHQUFHLFFBQVMsU0FBVUMsR0FDMUJBLEVBQUVDLGlCQUVFRCxFQUFFRSxjQUFjQyxPQUFTLEVBQ3pCVCxFQUFFVSxNQUFNQyxNQUFNLGFBRWRYLEVBQUVVLE1BQU1DLE1BQU0sZUFJMUIsUUFBVUMsR0FBTUMsRUFBSUMsR0FDaEJkLEVBQUVhLEdBQUlSLEdBQUcsMEJBQTJCLFNBQVNVLEVBQU9KLEVBQU9LLEVBQWNDLEdBQ3JFLEdBQUlDLElBQUtGLEVBQWVBLEVBQWUsR0FBSyxDQUM1Q2hCLEdBQUVjLEdBQU1LLEtBQUtELEVBQUksSUFBTVAsRUFBTVMsY0FxTnJDLFFBQVNDLEdBQWVDLEdBQ3BCLEdBQUlDLEdBQU90QixTQUFTdUIsdUJBQXVCLFFBQVEsR0FDL0NDLEVBQVlDLFNBQVNDLE9BQU9DLGlCQUFpQkwsR0FBTU0saUJBQWlCLG1CQUNwRUMsRUFBU0osU0FBU0Ms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QUlILEVBQUVpQixNQUFPLENBQ1QsR0FBSWhGLEdBQUkrRCxFQUFFaUIsTUFBTUYsTUFBTSx5QkFDdEI5RSxLQUFNa0UsRUFBSWxFLEVBQUUsSUFFaEIsTUFBT2tFLElBRVhFLHFCQUFzQixTQUFTTCxFQUFHRyxHQUM5QixJQUFLMUUsS0FBS21FLFlBQVlJLEdBQUksTUFBT3ZFLE1BQUttRSxZQUFZSSxHQUFLRyxHQUFHLENBQzFELElBQUlBLEVBQUkxRSxLQUFLbUUsWUFBWUksR0FBS3ZFLEtBQUtzRSx5QkFBMEIsS0FBTSxnQ0FBa0NDLEdBRXpHSSxTQUFVLFdBQ04sT0FBUSxHQUFJYyxRQUVqQnhFLE9BQU9nQixHQUFHQyxvQkFBc0IsU0FBU3FDLEdBQ3hDLEdBQUlHLEdBQUl6RCxPQUFPZ0IsR0FBRzhCLFNBQVNTLGVBQWVELEVBQzFDLFFBQU8sSUFBT0csR0FBS2dCLFFBQVFDLEtBQUssVUFBV2pCLEdBQzVDekQsT0FBT2dCLEdBQUdFLFdBQWEsU0FBU29DLEdBQy9CdEQsT0FBT2dCLEdBQUc4QixTQUFTNUIsV0FBV29DLElBdUJsQ3RELE9BQU8yRSxPQUFTL0QsSUFDaEJaLE9BQU80RSxpQkFBaUIsU0FBVWhFLEVBR2xDLEtBQUssR0FEREMsR0FBV3ZDLFNBQVN1Qix1QkFBdUIsUUFDdENpQixFQUFJLEVBQUdBLEVBQUlELEVBQVNFLFNBQWtCZixPQUFPZ0IsR0FBR0Msb0JBQW9CLEdBQXhDSCxLQUVwQ2QsT0FBT2dCLEdBQUdFLFdBQVciLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpe1xyXG4gICAgY29uc3Qgc2xpZGVyID0gJChcIi5zbGlkZXItbXlcIik7XHJcbiAgICBjb25zdCBzbGlkZXJfbm90aWNlID0gJChcIi5ub3RpY2UgLnNsaWRlci1ub3RpY2UsIC5lbnRlcnByaXNlIC5zbGlkZXItZW50XCIpO1xyXG5cclxuICAgIC8vIHNsaWRlciBtb3VzZSB3aGVlbFxyXG4gICAgZnVuY3Rpb24gbW91c2VXaGVlbChlbGVtZW50KSB7XHJcbiAgICAgICAgZWxlbWVudC5vbignd2hlZWwnLCAoZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG4gICAgICAgICAgICBpZiAoZS5vcmlnaW5hbEV2ZW50LmRlbHRhWSA8IDApIHtcclxuICAgICAgICAgICAgICAgICQodGhpcykuc2xpY2soJ3NsaWNrTmV4dCcpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5zbGljaygnc2xpY2tQcmV2Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiAgY291bnQoZWwsIGNfZWwpIHtcclxuICAgICAgICAkKGVsKS5vbignaW5pdCByZUluaXQgYWZ0ZXJDaGFuZ2UnLCBmdW5jdGlvbihldmVudCwgc2xpY2ssIGN1cnJlbnRTbGlkZSwgbmV4dFNsaWRlKXtcclxuICAgICAgICAgICAgdmFyIGkgPSAoY3VycmVudFNsaWRlID8gY3VycmVudFNsaWRlIDogMCkgKyAxO1xyXG4gICAgICAgICAgICAkKGNfZWwpLnRleHQoaSArICcvJyArIHNsaWNrLnNsaWRlQ291bnQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHNsaWRlcnMgaW5pdFxyXG4gICAgY291bnQoJy5zbGlkZXItbXknLCAnLnNsaWRlci1jb3VudC1tb2JpbGUnKTtcclxuICAgIGNvdW50KCcuZW50ZXJwcmlzZSAuc2xpZGVyLWVudCcsICcuc2xpZGVyLWNvdW50LW1vYmlsZS1lbnQnKTtcclxuICAgIGNvdW50KCcubi1ncm91cCAuc2xpZGVyLW5vdGljZScsICcuc2xpZGVyLWNvdW50LW1vYmlsZS1ub3RpY2UnKTtcclxuICAgIHNsaWRlci5zbGljayh7XHJcbiAgICAgICAgZG90czogZmFsc2UsXHJcbiAgICAgICAgaW5maW5pdGU6IHRydWUsXHJcbiAgICAgICAgc2xpZGVzVG9TaG93OiA1LFxyXG4gICAgICAgIHNsaWRlc1RvU2Nyb2xsOiAxLFxyXG4gICAgICAgIHZhcmlhYmxlV2lkdGg6IHRydWUsXHJcbiAgICAgICAgcmVzcG9uc2l2ZTogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBicmVha3BvaW50OiA2MjAsXHJcbiAgICAgICAgICAgICAgICBzZXR0aW5nczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhcmlhYmxlV2lkdGg6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHNsaWRlc1RvU2hvdzogMVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXVxyXG4gICAgfSk7XHJcbiAgICBzbGlkZXJfbm90aWNlLnNsaWNrKHtcclxuICAgICAgICBkb3RzOiBmYWxzZSxcclxuICAgICAgICBpbmZpbml0ZTogdHJ1ZSxcclxuICAgICAgICBzbGlkZXNUb1Nob3c6IDIsXHJcbiAgICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXHJcbiAgICAgICAgdmFyaWFibGVXaWR0aDogdHJ1ZSxcclxuICAgICAgICByZXNwb25zaXZlOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGJyZWFrcG9pbnQ6IDYyMCxcclxuICAgICAgICAgICAgICAgIHNldHRpbmdzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyaWFibGVXaWR0aDogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgc2xpZGVzVG9TaG93OiAxXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdXHJcbiAgICB9KTtcclxuICAgIG1vdXNlV2hlZWwoc2xpZGVyKTtcclxuICAgIG1vdXNlV2hlZWwoc2xpZGVyX25vdGljZSk7XHJcblxyXG4gICAgLy8gbWVudSB0b2dnbGVcclxuICAgICQoJy5uYXYtYmxvY2sgaW1nJykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoJy5tZW51LXdyYXBwZXInKS5hZGRDbGFzcygnbWVudS1hY3RpdmUnKTtcclxuICAgIH0pO1xyXG4gICAgJCgnbmF2IGltZywgbmF2IC50ZXh0cywgbmF2IC5idG4sIC5ncmV5LWJnJykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQoJy5tZW51LXdyYXBwZXInKS5yZW1vdmVDbGFzcygnbWVudS1hY3RpdmUnKTtcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIHRvZ2dsZSBzbGlkZXIgaXRlbSBkZXRhbHNcclxuICAgICQoJy5zbGlkZXItbXkgLmRldGFscycpLmNsaWNrKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICQoXCIuc2xpZGVyLW15IC5pbmZvXCIpLm5vdCgkKHRoaXMpLmNsb3Nlc3QoJy5zZWxlY3RlZCcpKS5yZW1vdmVDbGFzcyhcInNlbGVjdGVkXCIpO1xyXG4gICAgICAgICQodGhpcykuY2xvc2VzdCgnLmluZm8nKS50b2dnbGVDbGFzcygnc2VsZWN0ZWQnKTtcclxuXHJcbiAgICB9KTtcclxuICAgICQoJy5zbGlkZXItZW50IC5kZXRhbHMnKS5jbGljayhmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgICAgJChcIi5zbGlkZXItZW50IC50ZXh0cyAuZGV0YWxzLXRleHRcIikucmVtb3ZlQ2xhc3MoXCJzZWxlY3RlZFwiKTtcclxuICAgICAgICAkKHRoaXMpLmNsb3Nlc3QoJy50ZXh0cyAnKS50b2dnbGVDbGFzcygnc2VsZWN0ZWQnKTtcclxuICAgIH0pO1xyXG4gICAgJCgnLmVudGVycHJpc2UtcGFnZSAuZmlsdGVyLWNvbXBhbnkgLmRldGFscycpLmNsaWNrKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICAkKFwiLmVudGVycHJpc2UtcGFnZSAuZmlsdGVyLWNvbXBhbnkgLmRldGFscy10ZXh0XCIpLnJlbW92ZUNsYXNzKFwic2VsZWN0ZWRcIik7XHJcbiAgICAgICAgJCh0aGlzKS5jbG9zZXN0KCcudGV4dHMgJykudG9nZ2xlQ2xhc3MoJ3NlbGVjdGVkJyk7XHJcbiAgICB9KTtcclxuICAgICQoJy5mb290ZXItd3JhcHBlciAuYmxvY2snKS5jbGljayhmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAkKHRoaXMpLnRvZ2dsZUNsYXNzKCdmb290ZXItYWN0aXZlJyk7XHJcbiAgICB9KVxyXG5cclxuICAgIC8vIHNjcm9sbCAgdXAgLyBkb3duXHJcbiAgICB2YXIgbGFzdFNjcm9sbFRvcCA9IDA7XHJcbiAgICAkKHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uKGUpe1xyXG4gICAgICAgIHZhciBzdCA9ICQodGhpcykuc2Nyb2xsVG9wKCk7XHJcbiAgICAgICAgaWYgKHN0ID4gbGFzdFNjcm9sbFRvcCl7XHJcbiAgICAgICAgICAgICQoJ2hlYWRlciAuaGVhZGVyLW1vdmUnKS5hZGRDbGFzcygnaGVhZGVyLXNjcm9sbCcpXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgJCgnaGVhZGVyIC5oZWFkZXItbW92ZScpLnJlbW92ZUNsYXNzKCdoZWFkZXItc2Nyb2xsJylcclxuICAgICAgICB9XHJcbiAgICAgICAgbGFzdFNjcm9sbFRvcCA9IHN0O1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gcGVyc29uYWwgdGFic1xyXG4gICAgJCgnLnBlcnNvbmFsLXBhZ2UgLmNvbnRyb2xzIC5idG4tcycpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcucGVyc29uYWwtcGFnZSAuY29udHJvbHMgLmJ0bi1zJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG5cclxuICAgICAgICBpZigkKHRoaXMpLmhhc0NsYXNzKCdmb3ItYWJvdXQtdXMnKSl7XHJcbiAgICAgICAgICAgICQoJy5wZXJzb25hbC1wYWdlIC5hYm91dC11cycpLmNzcygnZGlzcGxheScsICdmbGV4Jyk7XHJcbiAgICAgICAgICAgICQoJy5wZXJzb25hbC1wYWdlIC50YWItY29tbWVudHMnKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgIH0gZWxzZSBpZigkKHRoaXMpLmhhc0NsYXNzKCdmb3ItdGFiLWNvbW1lbnRzJykpe1xyXG4gICAgICAgICAgICAkKCcucGVyc29uYWwtcGFnZSAudGFiLWNvbW1lbnRzJykuY3NzKCdkaXNwbGF5JywgJ2ZsZXgnKTtcclxuICAgICAgICAgICAgJCgnLnBlcnNvbmFsLXBhZ2UgLmFib3V0LXVzJykuY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcclxuICAgICAgICB9IGVsc2V7XHJcbiAgICAgICAgICAgICQoJy5wZXJzb25hbC1wYWdlIC5hYm91dC11cycpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgICAgICQoJy5wZXJzb25hbC1wYWdlIC50YWItY29tbWVudHMnKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vY29tcGFueSBpdGVtc1xyXG4gICAgJCgnLmNvbXBhbnktcGFnZSAuY2F0YWxvZyAuaXRlbSAudGl0bGUnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHdpbmRvdy5tYXRjaE1lZGlhKCcobWF4LXdpZHRoOiA2MjBweCknKS5tYXRjaGVzKSB7XHJcbiAgICAgICAgICAgIC8vIG1vYmlsZVxyXG4gICAgICAgICAgICBpZigkKHRoaXMpLnBhcmVudCgpLmhlaWdodCgpID09PSAwKXtcclxuICAgICAgICAgICAgICAgICQodGhpcykucGFyZW50KCkuaGVpZ2h0KCQodGhpcykucGFyZW50KCkuZmluZCgnLml0ZW1zJykuaGVpZ2h0KCkgKyA0NSk7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnBhcmVudCgpLmFkZENsYXNzKCdhY3RpdmUtaXRlbScpO1xyXG4gICAgICAgICAgICB9IGVsc2V7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnBhcmVudCgpLmhlaWdodCgwKTtcclxuICAgICAgICAgICAgICAgICQodGhpcykucGFyZW50KCkucmVtb3ZlQ2xhc3MoJ2FjdGl2ZS1pdGVtJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJCgnLmNvbXBhbnktcGFnZSAuY2F0YWxvZyAuaXRlbSAuYmxvY2snKS5ub3QoJCh0aGlzKS5wYXJlbnQoKSkuaGVpZ2h0KDApO1xyXG4gICAgICAgICAgICAkKHRoaXMpLnBhcmVudCgpLmNzcygnekluZGV4JywgNik7XHJcbiAgICAgICAgICAgICQoJy5jb21wYW55LXBhZ2UgLmNhdGFsb2cgLml0ZW0gLmJsb2NrJykubm90KCQodGhpcykucGFyZW50KCkpLnJlbW92ZUNsYXNzKCdhY3RpdmUtaXRlbScpO1xyXG4gICAgICAgICAgICAkKCcuY29tcGFueS1wYWdlIC5jYXRhbG9nIC5pdGVtIC5ibG9jaycpLm5vdCgkKHRoaXMpLnBhcmVudCgpKS5jc3MoJ3pJbmRleCcsIDUpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgJCgnLmNvbXBhbnktcGFnZSAuY2F0YWxvZyAuaXRlbSAuZWxzZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBkZXNrdG9wXHJcbiAgICAgICAgICAgIGlmKCQodGhpcykucGFyZW50KCkuaGVpZ2h0KCkgPT09IDE5NSl7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLnBhcmVudCgpLmhlaWdodCgkKHRoaXMpLnBhcmVudCgpLmZpbmQoJy5pdGVtcycpLmhlaWdodCgpICsgNDUpO1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5hZGRDbGFzcygnYWN0aXZlLWl0ZW0nKTtcclxuICAgICAgICAgICAgfSBlbHNle1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5wYXJlbnQoKS5oZWlnaHQoMTk1KTtcclxuICAgICAgICAgICAgICAgICQodGhpcykucGFyZW50KCkucmVtb3ZlQ2xhc3MoJ2FjdGl2ZS1pdGVtJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJCgnLmNvbXBhbnktcGFnZSAuY2F0YWxvZyAuaXRlbSAuYmxvY2snKS5ub3QoJCh0aGlzKS5wYXJlbnQoKSkuaGVpZ2h0KDE5NSk7XHJcbiAgICAgICAgICAgICQodGhpcykucGFyZW50KCkuY3NzKCd6SW5kZXgnLCA2KTtcclxuICAgICAgICAgICAgJCgnLmNvbXBhbnktcGFnZSAuY2F0YWxvZyAuaXRlbSAuYmxvY2snKS5ub3QoJCh0aGlzKS5wYXJlbnQoKSkucmVtb3ZlQ2xhc3MoJ2FjdGl2ZS1pdGVtJyk7XHJcbiAgICAgICAgICAgICQoJy5jb21wYW55LXBhZ2UgLmNhdGFsb2cgLml0ZW0gLmJsb2NrJykubm90KCQodGhpcykucGFyZW50KCkpLmNzcygnekluZGV4JywgNSk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKCcuY29tcGFueS1wYWdlIC5saXN0IC5sb2FkaW5nJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQodGhpcykucGFyZW50KCkuYWRkQ2xhc3MoJ2FjdGl2ZS1saXN0Jyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAkKCcuZW50ZXJwcmlzZS1wYWdlIC5ncmlkIC5pdGVtIC5jb250ZW50JykuY3NzKCdoZWlnaHQnLCAnMTAwJScpO1xyXG4gICAgfSk7XHJcbiAgICBcInVzZSBzdHJpY3RcIjtcclxuICAgIFwib2JqZWN0XCIgIT0gdHlwZW9mIHdpbmRvdy5DUCAmJiAod2luZG93LkNQID0ge30pLCB3aW5kb3cuQ1AuUGVuVGltZXIgPSB7XHJcbiAgICAgICAgcHJvZ3JhbU5vTG9uZ2VyQmVpbmdNb25pdG9yZWQ6ICExLFxyXG4gICAgICAgIHRpbWVPZkZpcnN0Q2FsbFRvU2hvdWxkU3RvcExvb3A6IDAsXHJcbiAgICAgICAgX2xvb3BFeGl0czoge30sXHJcbiAgICAgICAgX2xvb3BUaW1lcnM6IHt9LFxyXG4gICAgICAgIFNUQVJUX01PTklUT1JJTkdfQUZURVI6IDJlMyxcclxuICAgICAgICBTVE9QX0FMTF9NT05JVE9SSU5HX1RJTUVPVVQ6IDVlMyxcclxuICAgICAgICBNQVhfVElNRV9JTl9MT09QX1dPX0VYSVQ6IDIyMDAsXHJcbiAgICAgICAgZXhpdGVkTG9vcDogZnVuY3Rpb24obykge1xyXG4gICAgICAgICAgICB0aGlzLl9sb29wRXhpdHNbb10gPSAhMFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2hvdWxkU3RvcExvb3A6IGZ1bmN0aW9uKG8pIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMucHJvZ3JhbUtpbGxlZFNvU3RvcE1vbml0b3JpbmcpIHJldHVybiAhMDtcclxuICAgICAgICAgICAgaWYgKHRoaXMucHJvZ3JhbU5vTG9uZ2VyQmVpbmdNb25pdG9yZWQpIHJldHVybiAhMTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2xvb3BFeGl0c1tvXSkgcmV0dXJuICExO1xyXG4gICAgICAgICAgICB2YXIgdCA9IHRoaXMuX2dldFRpbWUoKTtcclxuICAgICAgICAgICAgaWYgKDAgPT09IHRoaXMudGltZU9mRmlyc3RDYWxsVG9TaG91bGRTdG9wTG9vcCkgcmV0dXJuIHRoaXMudGltZU9mRmlyc3RDYWxsVG9TaG91bGRTdG9wTG9vcCA9IHQsICExO1xyXG4gICAgICAgICAgICB2YXIgaSA9IHQgLSB0aGlzLnRpbWVPZkZpcnN0Q2FsbFRvU2hvdWxkU3RvcExvb3A7XHJcbiAgICAgICAgICAgIGlmIChpIDwgdGhpcy5TVEFSVF9NT05JVE9SSU5HX0FGVEVSKSByZXR1cm4gITE7XHJcbiAgICAgICAgICAgIGlmIChpID4gdGhpcy5TVE9QX0FMTF9NT05JVE9SSU5HX1RJTUVPVVQpIHJldHVybiB0aGlzLnByb2dyYW1Ob0xvbmdlckJlaW5nTW9uaXRvcmVkID0gITAsICExO1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY2hlY2tPbkluZmluaXRlTG9vcChvLCB0KVxyXG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fc2VuZEVycm9yTWVzc2FnZVRvRWRpdG9yKCksIHRoaXMucHJvZ3JhbUtpbGxlZFNvU3RvcE1vbml0b3JpbmcgPSAhMCwgITBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gITFcclxuICAgICAgICB9LFxyXG4gICAgICAgIF9zZW5kRXJyb3JNZXNzYWdlVG9FZGl0b3I6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX3Nob3VsZFBvc3RNZXNzYWdlKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbyA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9uOiBcImluZmluaXRlLWxvb3BcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGluZTogdGhpcy5fZmluZEFyb3VuZExpbmVOdW1iZXIoKVxyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50LnBvc3RNZXNzYWdlKG8sIFwiKlwiKVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHRoaXMuX3Rocm93QW5FcnJvclRvU3RvcFBlbigpXHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKHQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3Rocm93QW5FcnJvclRvU3RvcFBlbigpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIF9zaG91bGRQb3N0TWVzc2FnZTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBkb2N1bWVudC5sb2NhdGlvbi5ocmVmLm1hdGNoKC9ib29tZXJhbmcvKVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgX3Rocm93QW5FcnJvclRvU3RvcFBlbjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHRocm93IFwiV2UgZm91bmQgYW4gaW5maW5pdGUgbG9vcCBpbiB5b3VyIFBlbi4gV2UndmUgc3RvcHBlZCB0aGUgUGVuIGZyb20gcnVubmluZy4gUGxlYXNlIGNvcnJlY3QgaXQgb3IgY29udGFjdCBzdXBwb3J0QGNvZGVwZW4uaW8uXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIF9maW5kQXJvdW5kTGluZU51bWJlcjogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHZhciBvID0gbmV3IEVycm9yLFxyXG4gICAgICAgICAgICAgICAgdCA9IDA7XHJcbiAgICAgICAgICAgIGlmIChvLnN0YWNrKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaSA9IG8uc3RhY2subWF0Y2goL2Jvb21lcmFuZ1xcUys6KFxcZCspOlxcZCsvKTtcclxuICAgICAgICAgICAgICAgIGkgJiYgKHQgPSBpWzFdKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiB0XHJcbiAgICAgICAgfSxcclxuICAgICAgICBfY2hlY2tPbkluZmluaXRlTG9vcDogZnVuY3Rpb24obywgdCkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuX2xvb3BUaW1lcnNbb10pIHJldHVybiB0aGlzLl9sb29wVGltZXJzW29dID0gdCwgITE7XHJcbiAgICAgICAgICAgIGlmICh0IC0gdGhpcy5fbG9vcFRpbWVyc1tvXSA+IHRoaXMuTUFYX1RJTUVfSU5fTE9PUF9XT19FWElUKSB0aHJvdyBcIkluZmluaXRlIExvb3AgZm91bmQgb24gbG9vcDogXCIgKyBvXHJcbiAgICAgICAgfSxcclxuICAgICAgICBfZ2V0VGltZTogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIHJldHVybiArbmV3IERhdGVcclxuICAgICAgICB9XHJcbiAgICB9LCB3aW5kb3cuQ1Auc2hvdWxkU3RvcEV4ZWN1dGlvbiA9IGZ1bmN0aW9uKG8pIHtcclxuICAgICAgICB2YXIgdCA9IHdpbmRvdy5DUC5QZW5UaW1lci5zaG91bGRTdG9wTG9vcChvKTtcclxuICAgICAgICByZXR1cm4gITAgPT09IHQgJiYgY29uc29sZS53YXJuKFwiU29ycnkhXCIpLCB0XHJcbiAgICB9LCB3aW5kb3cuQ1AuZXhpdGVkTG9vcCA9IGZ1bmN0aW9uKG8pIHtcclxuICAgICAgICB3aW5kb3cuQ1AuUGVuVGltZXIuZXhpdGVkTG9vcChvKVxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgZnVuY3Rpb24gcmVzaXplR3JpZEl0ZW0oaXRlbSkge1xyXG4gICAgICAgIHZhciBncmlkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImdyaWRcIilbMF07XHJcbiAgICAgICAgdmFyIHJvd0hlaWdodCA9IHBhcnNlSW50KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGdyaWQpLmdldFByb3BlcnR5VmFsdWUoJ2dyaWQtYXV0by1yb3dzJykpO1xyXG4gICAgICAgIHZhciByb3dHYXAgPSBwYXJzZUludCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShncmlkKS5nZXRQcm9wZXJ0eVZhbHVlKCdncmlkLXJvdy1nYXAnKSk7XHJcbiAgICAgICAgdmFyIHJvd1NwYW4gPSBNYXRoLmNlaWwoKGl0ZW0ucXVlcnlTZWxlY3RvcignLmNvbnRlbnQnKS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQgKyByb3dHYXApIC8gKHJvd0hlaWdodCArIHJvd0dhcCkpO1xyXG4gICAgICAgIGl0ZW0uc3R5bGUuZ3JpZFJvd0VuZCA9IFwic3BhbiBcIiArIHJvd1NwYW47XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIHJlc2l6ZUFsbEdyaWRJdGVtcygpIHtcclxuICAgICAgICB2YXIgYWxsSXRlbXMgPSAkKFwiLmNhdGFsb2cgLml0ZW1cIik7XHJcbiAgICAgICAgZm9yICh2YXIgeCA9IDA7IHggPCBhbGxJdGVtcy5sZW5ndGg7IHgrKykge2lmICh3aW5kb3cuQ1Auc2hvdWxkU3RvcEV4ZWN1dGlvbigwKSkgYnJlYWs7XHJcbiAgICAgICAgICAgIHJlc2l6ZUdyaWRJdGVtKGFsbEl0ZW1zW3hdKTtcclxuICAgICAgICB9d2luZG93LkNQLmV4aXRlZExvb3AoMCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGZ1bmN0aW9uIHJlc2l6ZUluc3RhbmNlKGluc3RhbmNlKSB7XHJcbiAgICAgICAgdmFyIGl0ZW0gPSBpbnN0YW5jZS5lbGVtZW50c1swXTtcclxuICAgICAgICByZXNpemVHcmlkSXRlbShpdGVtKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgd2luZG93Lm9ubG9hZCA9IHJlc2l6ZUFsbEdyaWRJdGVtcygpO1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgcmVzaXplQWxsR3JpZEl0ZW1zKTtcclxuICAgIFxyXG4gICAgdmFyIGFsbEl0ZW1zID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIml0ZW1cIik7XHJcbiAgICBmb3IgKHZhciB4ID0gMDsgeCA8IGFsbEl0ZW1zLmxlbmd0aDsgeCsrKSB7aWYgKHdpbmRvdy5DUC5zaG91bGRTdG9wRXhlY3V0aW9uKDEpKSBicmVhaztcclxuICAgICAgICAvLyBpbWFnZXNMb2FkZWQoYWxsSXRlbXNbeF0sIHJlc2l6ZUluc3RhbmNlKTtcclxuICAgIH13aW5kb3cuQ1AuZXhpdGVkTG9vcCgxKTtcclxuXHJcbn0pOyJdfQ==
