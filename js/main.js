"use strict";$(document).ready(function(){function e(e){e.on("wheel",function(e){e.preventDefault(),e.originalEvent.deltaY<0?$(this).slick("slickNext"):$(this).slick("slickPrev")})}function t(e,t){$(e).on("init reInit afterChange",function(e,o,i,n){var s=(i?i:0)+1;$(t).text(s+"/"+o.slideCount)})}function o(e){var t=document.getElementsByClassName("grid")[0],o=parseInt(window.getComputedStyle(t).getPropertyValue("grid-auto-rows")),i=parseInt(window.getComputedStyle(t).getPropertyValue("grid-row-gap")),n=Math.ceil((e.querySelector(".content").getBoundingClientRect().height+i)/(o+i));e.style.gridRowEnd="span "+n}function i(){for(var e=$(".catalog .item"),t=0;t<e.length&&!window.CP.shouldStopExecution(0);t++)o(e[t]);window.CP.exitedLoop(0)}const n=$(".slider-my"),s=$(".notice .slider-notice, .enterprise .slider-ent");t(".slider-my",".slider-count-mobile"),t(".enterprise .slider-ent",".slider-count-mobile-ent"),t(".n-group .slider-notice",".slider-count-mobile-notice"),n.slick({dots:!1,infinite:!0,slidesToShow:5,slidesToScroll:1,variableWidth:!0,responsive:[{breakpoint:620,settings:{variableWidth:!1,slidesToShow:1}}]}),s.slick({dots:!1,infinite:!0,slidesToShow:2,slidesToScroll:1,variableWidth:!0,responsive:[{breakpoint:620,settings:{variableWidth:!1,slidesToShow:1}}]}),e(n),e(s),$(".nav-block img").click(function(){$(".menu-wrapper").addClass("menu-active")}),$("nav img, nav .texts, nav .btn, .grey-bg").click(function(){$(".menu-wrapper").removeClass("menu-active")}),$(".slider-my .detals").click(function(e){e.preventDefault(),$(".slider-my .info").not($(this).closest(".selected")).removeClass("selected"),$(this).closest(".info").toggleClass("selected")}),$(".slider-ent .detals").click(function(e){e.preventDefault(),$(".slider-ent .texts .detals-text").removeClass("selected"),$(this).closest(".texts ").toggleClass("selected")}),$(".enterprise-page .filter-company .detals").click(function(e){e.preventDefault(),$(".enterprise-page .filter-company .detals-text").removeClass("selected"),$(this).closest(".texts ").toggleClass("selected")}),$(".footer-wrapper .block").click(function(e){e.preventDefault(),$(this).toggleClass("footer-active")});var r=0;$(window).scroll(function(e){var t=$(this).scrollTop();t>r?$("header .header-move").addClass("header-scroll"):$("header .header-move").removeClass("header-scroll"),r=t}),$(".personal-page .controls .btn-s").on("click",function(){$(".personal-page .controls .btn-s").removeClass("active"),$(this).addClass("active"),$(this).hasClass("for-about-us")?($(".personal-page .about-us").css("display","flex"),$(".personal-page .tab-comments").css("display","none")):$(this).hasClass("for-tab-comments")?($(".personal-page .tab-comments").css("display","flex"),$(".personal-page .about-us").css("display","none")):($(".personal-page .about-us").css("display","none"),$(".personal-page .tab-comments").css("display","none"))}),$(".company-page .catalog .item .title").on("click",function(){window.matchMedia("(max-width: 620px)").matches&&(0===$(this).parent().height()?($(this).parent().height($(this).parent().find(".items").height()+45),$(this).parent().addClass("active-item")):($(this).parent().height(0),$(this).parent().removeClass("active-item")),$(".company-page .catalog .item .block").not($(this).parent()).height(0),$(this).parent().css("zIndex",6),$(".company-page .catalog .item .block").not($(this).parent()).removeClass("active-item"),$(".company-page .catalog .item .block").not($(this).parent()).css("zIndex",5))}),$(".company-page .catalog .item .else").on("click",function(){195===$(this).parent().height()?($(this).parent().height($(this).parent().find(".items").height()+45),$(this).parent().addClass("active-item")):($(this).parent().height(195),$(this).parent().removeClass("active-item")),$(".company-page .catalog .item .block").not($(this).parent()).height(195),$(this).parent().css("zIndex",6),$(".company-page .catalog .item .block").not($(this).parent()).removeClass("active-item"),$(".company-page .catalog .item .block").not($(this).parent()).css("zIndex",5)}),$(".company-page .list .loading").on("click",function(){$(this).parent().addClass("active-list")}),setTimeout(function(){$(".enterprise-page .grid .item .content").css("height","100%")}),$(".filter .points").on("click",function(){$(".category-modal").toggleClass("show")}),"object"!=typeof window.CP&&(window.CP={}),window.CP.PenTimer={programNoLongerBeingMonitored:!1,timeOfFirstCallToShouldStopLoop:0,_loopExits:{},_loopTimers:{},START_MONITORING_AFTER:2e3,STOP_ALL_MONITORING_TIMEOUT:5e3,MAX_TIME_IN_LOOP_WO_EXIT:2200,exitedLoop:function(e){this._loopExits[e]=!0},shouldStopLoop:function(e){if(this.programKilledSoStopMonitoring)return!0;if(this.programNoLongerBeingMonitored)return!1;if(this._loopExits[e])return!1;var t=this._getTime();if(0===this.timeOfFirstCallToShouldStopLoop)return this.timeOfFirstCallToShouldStopLoop=t,!1;var o=t-this.timeOfFirstCallToShouldStopLoop;if(o<this.START_MONITORING_AFTER)return!1;if(o>this.STOP_ALL_MONITORING_TIMEOUT)return this.programNoLongerBeingMonitored=!0,!1;try{this._checkOnInfiniteLoop(e,t)}catch(i){return this._sendErrorMessageToEditor(),this.programKilledSoStopMonitoring=!0,!0}return!1},_sendErrorMessageToEditor:function(){try{if(this._shouldPostMessage()){var e={action:"infinite-loop",line:this._findAroundLineNumber()};parent.postMessage(e,"*")}else this._throwAnErrorToStopPen()}catch(t){this._throwAnErrorToStopPen()}},_shouldPostMessage:function(){return document.location.href.match(/boomerang/)},_throwAnErrorToStopPen:function(){throw"We found an infinite loop in your Pen. We've stopped the Pen from running. Please correct it or contact support@codepen.io."},_findAroundLineNumber:function(){var e=new Error,t=0;if(e.stack){var o=e.stack.match(/boomerang\S+:(\d+):\d+/);o&&(t=o[1])}return t},_checkOnInfiniteLoop:function(e,t){if(!this._loopTimers[e])return this._loopTimers[e]=t,!1;if(t-this._loopTimers[e]>this.MAX_TIME_IN_LOOP_WO_EXIT)throw"Infinite Loop found on loop: "+e},_getTime:function(){return+new Date}},window.CP.shouldStopExecution=function(e){var t=window.CP.PenTimer.shouldStopLoop(e);return!0===t&&console.warn("Sorry!"),t},window.CP.exitedLoop=function(e){window.CP.PenTimer.exitedLoop(e)},window.onload=i(),window.addEventListener("resize",i);for(var a=document.getElementsByClassName("item"),l=0;l<a.length&&!window.CP.shouldStopExecution(1);l++);window.CP.exitedLoop(1)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
